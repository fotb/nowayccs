<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-4.2.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
  http://www.springframework.org/schema/task  
  http://www.springframework.org/schema/task/spring-task-4.2.xsd">

	<context:component-scan
		base-package="com.ccs.dao,com.ccs.bo,com.ccs.util" />

	<task:annotation-driven />

	<!-- quartz的定时任务的factorybean,配置其他config -->
	<bean id="jobFactory" class="com.ccs.bo.quartz.JobFactory"></bean>

	<bean id="startQuartz" lazy-init="true" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobFactory" ref="jobFactory"></property>
		<property name="triggers">
			<list>
				<!-- <ref bean="cronTrigger" /> -->
			</list>
		</property>
	</bean>

	<bean id="quartzManager" class="com.ccs.bo.quartz.QuartzManager"
		lazy-init="false" init-method="startJobs">
		<!--这个对象一定要注入，这样类才能进行管理，还有在类型要用get set方法，不然会报错。 -->
		<property name="scheduler" ref="startQuartz" />
	</bean>


	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location">
			<value>classpath:hibernate.properties</value>
		</property>
	</bean>


	<bean id="dbConfigPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- <bean id="dbPasswordPropertyConfigurer" class="com.jpmorgan.awm.jfam.common.config.SecurePropertyPlaceholderConfigurer"> 
		<property name="ignoreUnresolvablePlaceholders" value="true"/> <property 
		name="locations"> <list> <value>classpath:jpm_jdbc_pwd.properties</value> 
		</list> </property> <property name="secretKey" value="classpath:b2b.key"/> 
		</bean> <bean id="hkb2bDataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="jdbc/HKB2BDB" /> </bean> -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName"> <value>${db.driverClassName}</value> </property> 
		<property name="url"> <value>${db.url}</value> </property> <property name="username"> 
		<value>${db.username}</value> </property> <property name="password"> <value>${db.password}</value> 
		</property> </bean> -->

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

<!-- 	<bean id="lobHandler"
		class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true"></bean> -->
		
		
<!-- <bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" lazy-init="true" autowire="default"/>

<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true" autowire="default" >
    <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
  </bean> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="lobHandler" ref="lobHandler" /> -->
		<property name="hibernateProperties"
			ref="hibernateProperties" />
		<property name="packagesToScan">
			<list>
				<value>com.ccs.vo</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<!-- <bean id="b2bMessageSource" name="b2bMessageSource" class="com.jpmorgan.awm.jfam.b2b.bo.util.i18n.DataSourceMessageSource"> 
		<property name="basenames"> <list> <value>web</value> </list> </property> 
		<property name="cacheSeconds" value="60" /> </bean> -->
</beans>